<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!-- This bean has been referred fron struts.xml file; So type it correctly; -->
    <!-- Make scope prototype; This is really important. -->
	<context:component-scan base-package="tk.Cloud1008" />
<!--     <bean name="listAction" class="tk.Cloud1008.controller.listAction" scope="prototype">
	     <property name="numberPlateManager">
	        <ref bean="numberPlateManager"/>
	     </property>
    </bean> 
    
    <bean name="addAction" class="tk.Cloud1008.controller.addAction" scope="prototype">
	     <property name="numberPlateManager">
	        <ref bean="numberPlateManager"/>
	     </property>
    </bean> 
    
    <bean name="deleteAction" class="tk.Cloud1008.controller.deleteAction" scope="prototype">
	     <property name="numberPlateManager">
	        <ref bean="numberPlateManager"/>
	     </property>
    </bean>     
    
    <bean name="queryAction" class="tk.Cloud1008.controller.queryAction" scope="prototype">
	     <property name="numberPlateManager">
	        <ref bean="numberPlateManager"/>
	     </property>
    </bean> 
    
    <bean name="nullAction" class="tk.Cloud1008.controller.nullAction" scope="prototype">
	     <property name="numberPlateManager">
	        <ref bean="numberPlateManager"/>
	     </property>
    </bean> 
    
    <bean name="editNumberPlateAction" class="tk.Cloud1008.controller.EditNumberPlateAction" scope="prototype">
	     <property name="numberPlateManager">
	        <ref bean="numberPlateManager"/>
	     </property>
    </bean>
    
    These beans are injected automatically by spring context
    <bean id="numberPlateDAO" class="tk.Cloud1008.dao.NumberPlateDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="numberPlateManager" class="tk.Cloud1008.service.NumberPlateManagerImpl">
        <property name="numberPlateDAO" ref="numberPlateDAO"/>
    </bean>

	<bean id="userManagerAction" class="tk.Cloud1008.controller.UserManagerAction" >  
		<property name="userManager">
	    	<ref bean="userManager"/>
	    </property>
    </bean>
    
    <bean id="loginInterceptor" class="tk.Cloud1008.interceptor.LoginInterceptor">  
        <property name="userManager">
	    	<ref bean="userManager"/>
	    </property>
    </bean>  
    
    <bean id="userManager" class="tk.Cloud1008.service.UserManagerImpl">
     	<property name="userDAO" ref="userDAO" />
    </bean>  
    
    <bean id="userDAO" class="tk.Cloud1008.dao.UserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
	</bean>     -->
	
    <!-- Configure jdbc.properties -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="classpath:jdbc.properties" />
 
    <!-- Data Source configuration -->
    <bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
        p:password="${jdbc.password}" />
 
	<!-- Configure hibernate session factory -->    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.CharSet">utf8</prop>
		        <prop key="hibernate.connection.characterEncoding">utf8</prop>
		        <prop key="hibernate.connection.useUnicode">true</prop>
		        <prop key="hibernate.format_sql">true</prop>
		        <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="packagesToScan" value="tk.Cloud1008.entity" />
    </bean>
    <!-- Run SQL queries in transactions -->
    <tx:annotation-driven />
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
</beans>